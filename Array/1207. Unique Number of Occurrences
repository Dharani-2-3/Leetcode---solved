/*
1207. Unique Number of Occurrences

Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.

Example 1:
Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.

Example 2:
Input: arr = [1,2]
Output: false

Example 3:
Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true

Constraints:
1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000
*/

class Solution {
    public boolean uniqueOccurrences(int[] arr) {
        int [] HashTable = new int[2001];
       
        for(int i: arr)
        {
            HashTable[i+1000]=HashTable[i+1000]+1 ;
           
        }
        boolean flag = true;
        HashSet<Integer> set = new HashSet<>();
        for(int i: arr)
        { 

            int freq = HashTable[i+1000];
            if(freq!=-1){
                if(set.contains(freq))
                {
                    return false;
                }
                set.add(freq);
                HashTable[i+1000] = -1;
            } 
        }
        return true;
     }
}
